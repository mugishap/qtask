generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  LOW
  MEDIUM
  HIGH

  @@map("priorities")
}

enum Status {
  DONE
  IN_PROGRESS
  TODO

  @@map("statuses")
}

model User {
  id        String   @id @default(uuid())
  names     String   @unique
  email     String   @unique
  telephone String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]

  @@map("users")
}

model Task {
  id          String   @id @default(uuid())
  name        String
  description String
  priority    Priority @default(LOW)
  status      Status   @default(TODO)
  projectId   String?
  project     Project? @relation(fields: [projectId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  assignees   User[]
  file        File?    @relation(fields: [fileId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  fileId      String?

  @@map("tasks")
}

model File {
  id        String    @id @default(uuid())
  name      String?
  url       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Task      Task[]
  Project   Project[]

  @@map("files")
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String
  file        File?    @relation(fields: [fileId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  fileId      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Task        Task[]
}
